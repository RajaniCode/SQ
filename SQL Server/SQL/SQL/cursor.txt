USE [master];
GO

--IF EXISTS(SELECT name FROM sys.databases WHERE name = N'sampledb')
IF DB_ID (N'sampledb') IS NOT NULL
DROP DATABASE [sampledb];
GO

CREATE DATABASE sampledb;
GO

USE [sampledb];
GO

IF OBJECT_ID('Table1', 'U') IS NOT NULL
DROP TABLE Table1;
GO

CREATE TABLE Table1
(
 ID int, 
 Value nvarchar(max)
);
GO

INSERT INTO Table1
SELECT 1, 'First' UNION ALL
SELECT 2, 'Second' UNION ALL
SELECT 3, 'Third' UNION ALL
SELECT 4, 'Fourth' UNION ALL
SELECT 5, 'Fifth';
GO

SELECT * FROM Table1;
GO

IF OBJECT_ID('Table2', 'U') IS NOT NULL
DROP TABLE Table2;
GO

CREATE TABLE Table2
(
 ID int, 
 Value nvarchar(max)
);
GO

INSERT INTO Table2
SELECT 1, 'I' UNION ALL
SELECT 2, 'II' UNION ALL
SELECT 3, 'III' UNION ALL
SELECT 6, 'VI' UNION ALL
SELECT 7, 'VII' UNION ALL
SELECT 8, 'VIII';
GO

SELECT * FROM Table2;
GO

--IF EXISTS(SELECT name FROM sys.objects WHERE name = N'F1' AND type =N'TF')
IF OBJECT_ID(N'F1', N'TF') IS NOT NULL
DROP FUNCTION F1;
GO

CREATE FUNCTION F1
(
 @In int
)
RETURNS @R1 TABLE
(
  ID int,
  Value nvarchar(max)
)
AS
BEGIN
 INSERT INTO @R1 
 SELECT ID, Value FROM Table2 WHERE (ID > @In);
 RETURN;
END
GO

SELECT * FROM Table1;
GO

DECLARE @ID int;
DECLARE CursorID CURSOR 
  LOCAL STATIC READ_ONLY FORWARD_ONLY
FOR 
SELECT DISTINCT ID FROM Table1
OPEN CursorID
FETCH NEXT FROM CursorID INTO @ID
WHILE @@FETCH_STATUS = 0
BEGIN
    SELECT * FROM F1(@ID);
    FETCH NEXT FROM CursorID INTO @ID;
END
CLOSE CursorID
DEALLOCATE CursorID
GO