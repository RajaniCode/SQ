4.6 Column and Table Aliases


Modify the query to have better output and be shorter.


schema.sql
CREATE TABLE Movies (
  id int PRIMARY KEY,
  title varchar(50) NOT NULL
);

INSERT INTO Movies (id, title) VALUES
  (1, 'Don Juan'),
  (2, 'The Lost World'),
  (3, 'Peter Pan'),
  (4, 'Robin Hood');

CREATE TABLE Rooms (
  id INT PRIMARY KEY,
  seats int,
  movie_id int,
  FOREIGN KEY (movie_id) REFERENCES Movies
);

INSERT INTO Rooms (id, seats, movie_id) VALUES
  (1, 50, 2),
  (2, 100, 1),
  (3, 100, NULL),
  (4, 150, 3);


query.sql
SELECT Movies.title, Rooms.id, Rooms.seats
FROM Movies
INNER JOIN Rooms
ON Movies.id = Rooms.movie_id
WHERE Rooms.seats > 75
ORDER BY Rooms.seats desc;


1. First, change the query to output "Movie Title" instead of just title on the result.

Answer: 
query.sql
SELECT Movies.title AS "Movie Title", Rooms.id, Rooms.seats
FROM Movies
INNER JOIN Rooms
ON Movies.id = Rooms.movie_id
WHERE Rooms.seats > 75
ORDER BY Rooms.seats desc;


2. Next, change the id field to print "Theatre Number".

Answer:
query.sql
SELECT Movies.title AS "Movie Title", Rooms.id AS "Theatre Number", Rooms.seats
FROM Movies
INNER JOIN Rooms
ON Movies.id = Rooms.movie_id
WHERE Rooms.seats > 75
ORDER BY Rooms.seats desc;


3. Now, let's use table aliases to shorten the query. Alias Rooms to use "r" and Movies to "m".

Answer:
query.sql
SELECT m.title AS "Movie Title", r.id AS "Theatre Number", r.seats
FROM Movies m
INNER JOIN Rooms r
ON m.id = r.movie_id
WHERE r.seats > 75
ORDER BY r.seats desc;

--Note:
SELECT m.title "Movie Title", r.id "Theatre Number", r.seats
FROM Movies m
INNER JOIN Rooms r
ON m.id = r.movie_id
WHERE r.seats > 75
ORDER BY r.seats desc;